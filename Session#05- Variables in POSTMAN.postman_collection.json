{
	"info": {
		"_postman_id": "eecfa885-ca45-4cca-a8b5-c512b8d8fec7",
		"name": "Session#05- Variables in POSTMAN",
		"description": "1\\. What are variables in Postman tool.  \n2\\. How to create variable and use variable.  \n3\\. Different types of variable in postman tool such as collection variable, environment variable and global variable.  \n4\\. Scope of variables.\n\nURL 1 : [https://reqres.in/api/users/2](https://reqres.in/api/users)\n\nURL 2: [https://reqres.in/api/users?page=2](https://reqres.in/api/users)\n\nIn order from broadest to narrowest, these scopes are: _global_, _collection_, _environment_, _data_, and _local_.\n\n- **Global variables** enable you to access data between collections, requests, scripts, and environments. Global variables are available throughout a [workspace](https://learning.postman.com/docs/collaborating-in-postman/using-workspaces/create-workspaces/). Since global variables have the broadest scope available in Postman, they're well-suited for testing and prototyping. In later development phases, use more specific scopes.\n    \n- **Collection variables** are available throughout the requests in a collection and are independent of environments. Collection variables don't change based on the selected environment. Collection variables are suitable if you're using a single environment, for example for auth or URL details.\n    \n- **Environment variables** enable you to scope your work to different environments, for example local development versus testing or production. One environment can be active at a time. If you have a single environment, using collection variables can be more efficient, but environments enable you to specify [role-based access levels](https://learning.postman.com/docs/sending-requests/variables/team-environments/#manage-environment-roles).\n    \n- **Data variables** come from external CSV and JSON files to define data sets you can use when running collections with [Newman](https://learning.postman.com/docs/collections/using-newman-cli/command-line-integration-with-newman/) or the [Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/). Data variables have current values, which don't persist beyond request or collection runs.\n    \n- **Local variables** are temporary variables that are accessed in your request scripts. Local variable values are scoped to a single request or collection run, and are no longer available when the run is complete. Local variables are suitable if you need a value to override all other variable scopes but don't want the value to persist once execution has ended.\n    \n\n<img src=\"https://assets.postman.com/postman-docs/v10/var-scope-v10.jpg\" alt=\"Variable scope\">\n\nIf a variable with the same name is declared in two different scopes, the value stored in the variable with narrowest scope will be used. For example, if there is a global variable named `username` and a local variable named `username`, the local value will be used when the request runs.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37820929"
	},
	"item": [
		{
			"name": "GET Request - List Single User",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Url}}/api/users/2",
					"host": [
						"{{Url}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request - List Users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Url_env}}/api/users?page=2",
					"host": [
						"{{Url_env}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request - List Resource",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{globalUrl}}/api/unknown",
					"host": [
						"{{globalUrl}}"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Url",
			"value": "https://reqres.in",
			"type": "string"
		}
	]
}